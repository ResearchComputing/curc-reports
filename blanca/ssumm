#!/bin/bash

# Monthly reports by partition
export PATH=/curc/slurm/blanca/current/bin:$PATH

# Important time variable
export SLURM_TIME_FORMAT=%s

# sacct cmd
CMD='sacct -P -n -T -a'

# QoS range
RANGE="blanca-ics"

help () {
	echo "Usage: ssumm -s <starttime> -e <endtime> [-q qos>] [-A <account>]"
	echo "  Required:"
	echo "    : -s <starttime> eg 2015-01-01T00:00:00"
	echo "    : -e <endtime>   eg 2015-01-01T00:00:00"
	echo "  Optional:"
	echo "    : -q <qos>       eg -q janus"
	echo "    : -A <account>   eg -A UCB00000001"
	echo "    : -d             Add sacct command output"
}

report () {
        # Get some job info for the time range
        $CMD --start=${START} --end=${END}T23:59:59 --qos=${QOS} --format=jobid,submit,start,end,alloccpus,maxrss,user | grep -iv unknown > /tmp/reports.tmp
	if [[ $DEBUG == 1 ]]
	then
		echo "sacct command run:  $CMD --start=${START} --end=${END} --qos=${QOS} --format=jobid,submit,start,end,alloccpus,maxrss,user | grep -iv unknown"
	fi
        TOTAL_JOBS=`grep -v '[0-9]\.' /tmp/reports.tmp | wc -l | awk '{print $1}'`
        if [[ $TOTAL_JOBS == 0 ]]
        then
                echo "No jobs for time period"
                continue
        fi
	DATE=`echo ${START} | awk -F'-' '{print $2"/"$1}'`
        MED_JOB=`echo $((${TOTAL_JOBS}/2))`
        # Do some math for desired data
        WAIT=`grep -v '[0-9]\.' /tmp/reports.tmp | awk -F'|' '{sum+=($3-$2)} END {print sum}'`
        MED_WAIT=`grep -v '[0-9]\.' /tmp/reports.tmp | awk -F'|' '{print $3-$2}' | sort -n | sed -n "${MED_JOB}p"`
        MED_MEM_JOB=`grep "K$" /tmp/reports.tmp | wc -l`
        MED_MEM_JOB=`echo $((${MED_MEM_JOB}/2))`
        MED_MEM=`grep "K$" /tmp/reports.tmp | awk -F'|' '{print $6}' | sort -n | sed -n "${MED_MEM_JOB}p"`
        MAX_MEM=`grep "K$" /tmp/reports.tmp | awk -F'|' '{print $6}' | sort -n | tail -n 1`
        WALL=`grep -v '[0-9]\.' /tmp/reports.tmp | awk -F'|' '{WALL+=($4-$3)} END {print WALL}'`
        MED_WALL=`grep -v '[0-9]\.' /tmp/reports.tmp | awk -F'|' '{print ($4-$3)}' | sort -n | sed -n "${MED_JOB}p"`
        SU=`grep -v '[0-9]\.' /tmp/reports.tmp | awk -F'|' '{SU+=($4-$3)*$5} END {print SU}'`
        SU=`bc <<< "scale=2;${SU}/3600"`
	USERS=` sacctmgr -p -n show account ${QOS} withassoc | awk -F'|' '{print $6}' | grep -v ^$`
        USER_INFO=$(for U in $USERS
        do
                USER_SU=`grep -v '[0-9]\.' /tmp/reports.tmp | grep ${U} | awk -F'|' '{SU+=($4-$3)*$5} END {print SU}'`
                USER_SU=`bc <<< "scale=2;${USER_SU}/3600"`
                if [[ $USER_SU == "" ]]
                then
                        USER_SU=0
                fi
                GIVEN=`getent passwd $U | awk -F':' '{print $5}' | awk '{gsub(/,,+/,"")}1'`
                if [[ $GIVEN =~ ., ]]
                then
                        GIVEN=`echo $GIVEN | awk -F',' '{print $2 " " $1}' | sed 's/^ //g'`
                fi
                echo -e "  ${U} - ${GIVEN}: (${USER_SU})"
        done)

	read -d '' String <<EOF
Hi,

This is an automated report for ${DATE} containing information regarding your Blanca ("condo") cluster project, whose high-priority QoS is named ${QOS}.  Please review it and email rc-help@colorado.edu if you have any questions or want to remove any users from access.

QoS: ${QOS}
Number of jobs run: ${TOTAL_JOBS}
Total SU (core-hours) used: ${SU} 
Median queue wait time: ${MED_WAIT} seconds
Median wall time: ${MED_WALL} seconds

The following users are authorized to run jobs in ${QOS}.  The number of SU used last month by each is listed in parentheses.
${USER_INFO}

Regards,
CU-Boulder Research Computing
EOF

	echo "$String"

}

while getopts ":s:e:A:q:d" opt; do
case $opt in
	s)
		START=$OPTARG
		;;
	e)
		END=$OPTARG
		;;
	A)
		CMD="sacct -P -n -T -A ${OPTARG}"
		;;
	q)
		RANGE=${OPTARG}
		;;
	d)
		DEBUG=1
		;;
	\?)
		help
		exit 0
		;;
esac
done

if [[ -z $START || -z $END ]]
then
	help
	exit 1
fi

for QOS in $RANGE
do
	report 2>/dev/null
	rm -f /tmp/reports.tmp
done
